// ===== SUBSTITUA APENAS ESTAS 2 FUN√á√ïES NO SEU C√ìDIGO =====

// FUN√á√ÉO 1: Substituir a fun√ß√£o extrairNome() existente
function extrairNome(mensagem) {
  console.log('üîç Extraindo nome de:', mensagem);
  
  // Se a mensagem come√ßa com padr√µes de profiss√£o, N√ÉO √© nome
  const padroesProfissao = [
    /^sou\s+[a-zA-Z√Ä-√ø]+(?:\s|,|$)/i,
    /^trabalho\s+(como|com|de)/i,
    /^atuo\s+como/i,
    /especialista\s+em/i,
    /profiss√£o/i
  ];
  
  // Verificar se √© profiss√£o
  const eProfissao = padroesProfissao.some(padrao => padrao.test(mensagem));
  if (eProfissao) {
    console.log('‚ùå Detectado como profiss√£o, n√£o nome');
    return null;
  }
  
  // Padr√µes para nomes (mantendo sua l√≥gica original)
  const padroes = [
    /(?:me chamo|meu nome √©|sou |eu sou )?([A-Za-z√Ä-√ø]{2,20})(?:\s|$|,|\.)/i,
    /^([A-Za-z√Ä-√ø]{2,20})$/i // Nome sozinho
  ];
  
  for (const padrao of padroes) {
    const match = mensagem.match(padrao);
    if (match && !mensagem.toLowerCase().includes('profiss') && !mensagem.toLowerCase().includes('trabalho')) {
      console.log('‚úÖ Nome extra√≠do:', match[1].trim());
      return match[1].trim();
    }
  }
  
  console.log('‚ùå Nenhum nome encontrado');
  return null;
}

// FUN√á√ÉO 2: Melhorar a fun√ß√£o extrairProfissaoEspecialidade() existente
function extrairProfissaoEspecialidade(mensagem) {
  console.log('üîç Extraindo profiss√£o de:', mensagem);
  
  // Separar por v√≠rgula, "especialista em", etc.
  let profissao = mensagem;
  let especialidade = null;
  
  // Remover prefixos comuns (mantendo sua l√≥gica)
  profissao = profissao.replace(/^(sou |trabalho como |atuo como |me formei em )/i, '');
  
  // Buscar padr√µes de especialidade (expandindo sua regex)
  const regexEspecialidade = /(.*?)(?:,|\s+)(?:especialista em|especialidade em|trabalho com|foco em|√°rea de|focado em|focada em|especializado em|especializada em)\s+(.+)/i;
  const match = mensagem.match(regexEspecialidade);
  
  if (match) {
    profissao = match[1].trim();
    especialidade = match[2].trim();
  } else {
    // Se n√£o tem especialidade clara, usar "Geral" (mantendo sua l√≥gica)
    especialidade = 'Geral';
  }
  
  console.log(`‚úÖ Profiss√£o: "${profissao}" | Especialidade: "${especialidade}"`);
  
  return {
    profissao: profissao,
    especialidade: especialidade
  };
}
